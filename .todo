GENERAL DESIGN:
    PLAYER:
        ☐ Visual design.
            ✔ Decide on the height. @done(20-12-01 18:06)
                * One or two chars? One.
        ✔ Movement design. @done(20-11-27 20:08)
            * It's update rate should be the same as the screen's, unlike the terrain which moves "forward" every terrain_update_time milliseconds.
            * It only changes it's vertical position.
            ☐ Fix player drops down before '\' char.
        ✔ Jumping. @done(20-12-01 19:33)
            * Remember the offset during the jump
            * During the fall, the ground must move to keep the player at the same height: that means that the player only moves up or down from IY to IY - MAX_JUMP_HEIGHT.

    TERRAIN:
        ☐ Visual design.
            ☐ Colors?
            *Column based (one column is a unit). Each unit should be related to the previous one.
        ✔ Functional design. @done(20-11-27 20:08)
            * Should be smaller in lenght to the actual window and up to MAX_ROWS rows tall.
            * It's moving speed should increase from START_SPEED to MAX_SPEED as the player progresses.
            * Should vary in height, creating the illusion that the player's climbing/descending a mountain (or something else).
        ✔ Terrain generator. @started(20-11-30 12:02) @done(20-11-30 14:27) @lasted(2h25m46s)
            ☐ Generate more than one tile at a time.
            ☐ Redo terrain generator. @critical
                Maybe read about noise generators?
        ✔ Terrain "mover". @done(20-11-30 10:44)
            ✔ First attempt: Chrono. @done(20-11-30 10:43)
                * Basically, inside a loop, constantly check if n ammount of time has passed.
                * I'm sticking with this implementation, for now.
        ✔ Terrain height offset. @done(20-11-30 16:17)
        ☐ Variable speed.

    OBSTACLES:
        ☐ Visual design.
            ☐ Types.
        ✔ Functional design. @done(20-11-27 20:11)
            * Should be related somehow to the previous one and the terrain.
            * There can only be MAX_OBSATCLES_PER_SCREEN obstacles at a time.
            * Obstacle spawn offset is determined by new_obstacle_distance, which depends on min_obstacle_distance.
        ☐ Spawn.

    ☐ Score?
    ☐ Extended ASCII table for more characters.
        No idea...
